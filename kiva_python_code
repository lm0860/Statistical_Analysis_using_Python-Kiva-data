{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "dac3630c",
   "metadata": {
    "id": "63ca352c"
   },
   "source": [
    "\n",
    "# An Exploratory Look at Kiva Lenders"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ixpbdNNiuhXD",
   "metadata": {
    "id": "ixpbdNNiuhXD"
   },
   "source": [
    "# Problem Statement"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "jKAXvbUEujwA",
   "metadata": {
    "id": "jKAXvbUEujwA"
   },
   "source": [
    "\n",
    "The objective of this report is to explore the data from Kiva.org in order to find interesting research questions to answer. Kiva.org is a prosocial crowdfunding platform that facilitates crowd-funded interest-free loans for underserved individuals and groups in developing countries. This report will explore the data to see if there are any interesting trends or relationships that can be found. \n",
    "\n",
    "There are three tables in the dataset: loans.csv, lenders.csv, and loans_lenders.csv. The loans.csv table contains information on each loan made on the Kiva platform, including the loan amount, loan status, country of the borrower, and sector. The lenders.csv table includes information on each lender, including the country they are from and how much they have lent in total. The loans_lenders.csv table maps which lender gave to which project. \n",
    "\n",
    "To begin, the STATUS variable in the loans table was examined. This variable indicates the status of the loan, and has eight different values: funded, expired, defaulted, in_repayment, repaid, fundraising_complete, in_funding, and funded_and_expired. Of these, funded, expired, defaulted, in_repayment, and repaid are the only ones that indicate whether or not the loan was successfully funded. \n",
    "\n",
    "Next, the data was merged into one table using the loans_lenders table as a key. This table was then used to examine the total number of loans a member has contributed to. \n",
    "\n",
    "The data was also examined to see if there were any relationships between the amount of the loan and the status of the loan. \n",
    "\n",
    "Lastly, the data was explored to see if there were any relationships between the country of the borrower and the status of the loan. \n",
    "\n",
    "From this initial exploration, it appears that there are some interesting trends in the data that could be further explored."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "sgc4DbQXuI5U",
   "metadata": {
    "id": "sgc4DbQXuI5U"
   },
   "source": [
    "# Research Question"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c4191a81",
   "metadata": {
    "id": "c4191a81"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "wVWjnFHGuCUe",
   "metadata": {
    "id": "wVWjnFHGuCUe"
   },
   "source": [
    "There are quality issues in the dataset (missing data, extreme values, inconsistency, etc.)? Give\n",
    "one example variable with potential quality issues.\n",
    "\n",
    "The variable \"loan_amount\" has potential quality issues as it has missing data and extreme values. I would clean or transform this variable by imputing the missing values and removing the extreme values. \n",
    "\n",
    "The variable \"status\" in loans.csv has 3 unique values. If we want to use it as target variable of two categories for classification, I would map the values to 0 and 1, where 0 represents \"paid\" and 1 represents \"defaulted\". \n",
    "\n",
    "Yes, we can merge the three tables together. We can merge the three tables by inner joining on the \"id\" column. \n",
    "\n",
    "After merging, we can ask aggregated questions, such as “the total number of loans a member has contributed to”. \n",
    "\n",
    "1. What is the total number of loans a member has contributed to?\n",
    "2. What is the average loan amount per member? \n",
    "3. What is the total number of defaulted loans? \n",
    "4. What is the average loan amount per defaulted loan? \n",
    "5. What is the percentage of loans that are defaulted? \n",
    "6. What is the total number of lenders per loan? \n",
    "7. What is the average number of lenders per loan? \n",
    "8. What is the total number of loans per country? \n",
    "9. What is the average loan amount per country? \n",
    "10. What is the percentage of loans that are funded? \n",
    "11. What is the percentage of loans that are not funded?\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "j5BY31Y7v4EY",
   "metadata": {
    "id": "j5BY31Y7v4EY"
   },
   "source": [
    "# Import Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "pi6AuJzkv6uk",
   "metadata": {
    "id": "pi6AuJzkv6uk"
   },
   "outputs": [],
   "source": [
    "import math\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import math\n",
    "# import missingno as msno\n",
    "from datetime import datetime, timedelta\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import seaborn as sns\n",
    "plt.style.use('seaborn-darkgrid')\n",
    "palette = plt.get_cmap('Set2')\n",
    "\n",
    "import os\n",
    "from matplotlib.backends.backend_pdf import PdfPages\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "\n",
    "from sklearn.metrics import confusion_matrix, classification_report\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1036e5c4",
   "metadata": {
    "id": "1036e5c4"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "ptCuVcGtuGLZ",
   "metadata": {
    "id": "ptCuVcGtuGLZ"
   },
   "source": [
    "# Data Exploration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b738b6ca",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 380
    },
    "id": "b738b6ca",
    "outputId": "a3ac6fcb-a6ea-4cd3-a2a6-c6848d003383"
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "\n",
    "lenders = pd.read_csv('lenders_sample.csv')\n",
    "loans_lenders = pd.read_csv('loans_lenders_sample.csv')\n",
    "# read in the data\n",
    "loans = pd.read_csv('loans_sample.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c3a50060",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PERMANENT_NAME</th>\n",
       "      <th>DISPLAY_NAME</th>\n",
       "      <th>MAIN_PIC_ID</th>\n",
       "      <th>CITY</th>\n",
       "      <th>STATE</th>\n",
       "      <th>COUNTRY_CODE</th>\n",
       "      <th>MEMBER_SINCE</th>\n",
       "      <th>PERSONAL_URL</th>\n",
       "      <th>OCCUPATION</th>\n",
       "      <th>LOAN_BECAUSE</th>\n",
       "      <th>OTHER_INFO</th>\n",
       "      <th>LOAN_PURCHASE_NUM</th>\n",
       "      <th>INVITED_BY</th>\n",
       "      <th>NUM_INVITED</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>pamelamaria7176</td>\n",
       "      <td>Pamela Maria</td>\n",
       "      <td>2173780.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1462466084</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    PERMANENT_NAME  DISPLAY_NAME  MAIN_PIC_ID CITY STATE COUNTRY_CODE  \\\n",
       "1  pamelamaria7176  Pamela Maria    2173780.0  NaN   NaN          NaN   \n",
       "\n",
       "   MEMBER_SINCE PERSONAL_URL OCCUPATION LOAN_BECAUSE OTHER_INFO  \\\n",
       "1    1462466084          NaN        NaN          NaN        NaN   \n",
       "\n",
       "   LOAN_PURCHASE_NUM INVITED_BY  NUM_INVITED  \n",
       "1                  1        NaN            0  "
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lenders[lenders['PERMANENT_NAME'] == 'pamelamaria7176']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d247147b",
   "metadata": {
    "id": "d247147b"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PERMANENT_NAME</th>\n",
       "      <th>DISPLAY_NAME</th>\n",
       "      <th>MAIN_PIC_ID</th>\n",
       "      <th>CITY</th>\n",
       "      <th>STATE</th>\n",
       "      <th>COUNTRY_CODE</th>\n",
       "      <th>MEMBER_SINCE</th>\n",
       "      <th>PERSONAL_URL</th>\n",
       "      <th>OCCUPATION</th>\n",
       "      <th>LOAN_BECAUSE</th>\n",
       "      <th>OTHER_INFO</th>\n",
       "      <th>LOAN_PURCHASE_NUM</th>\n",
       "      <th>INVITED_BY</th>\n",
       "      <th>NUM_INVITED</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>teresa5718</td>\n",
       "      <td>Teresa</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1393520019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>pamelamaria7176</td>\n",
       "      <td>Pamela Maria</td>\n",
       "      <td>2173780.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1462466084</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>mireya2557</td>\n",
       "      <td>Mireya</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1445444352</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>jonatan8873</td>\n",
       "      <td>Jonatan</td>\n",
       "      <td>1356784.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1369132003</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>MichaelHaenni</td>\n",
       "      <td>Michael Haenni</td>\n",
       "      <td>2401474.0</td>\n",
       "      <td>Zürich</td>\n",
       "      <td>ZH</td>\n",
       "      <td>CH</td>\n",
       "      <td>1243806271</td>\n",
       "      <td>www.digiinfo.com</td>\n",
       "      <td>CEO</td>\n",
       "      <td>It's a good thing &amp; fun at the same time.</td>\n",
       "      <td>Develop and sell software for the graphic indu...</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15610</th>\n",
       "      <td>bernadett8136</td>\n",
       "      <td>Bernadett</td>\n",
       "      <td>969074.0</td>\n",
       "      <td>Calgary</td>\n",
       "      <td>Alberta</td>\n",
       "      <td>CA</td>\n",
       "      <td>1254103689</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20</td>\n",
       "      <td>Todd Skene</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15611</th>\n",
       "      <td>lindsey15882007</td>\n",
       "      <td>Lindsey</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1487697303</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15612</th>\n",
       "      <td>dorianne7021</td>\n",
       "      <td>Dorianne</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1538457803</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15613</th>\n",
       "      <td>laurie99399806</td>\n",
       "      <td>Laurie</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1446796372</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>Chris</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15614</th>\n",
       "      <td>sara42</td>\n",
       "      <td>Sara</td>\n",
       "      <td>701205.0</td>\n",
       "      <td>Great Falls</td>\n",
       "      <td>Virginia</td>\n",
       "      <td>US</td>\n",
       "      <td>1296054872</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Its a great small way to help people in need!</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15615 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        PERMANENT_NAME    DISPLAY_NAME  MAIN_PIC_ID         CITY     STATE  \\\n",
       "0           teresa5718          Teresa          NaN          NaN       NaN   \n",
       "1      pamelamaria7176    Pamela Maria    2173780.0          NaN       NaN   \n",
       "2           mireya2557          Mireya          NaN          NaN       NaN   \n",
       "3          jonatan8873         Jonatan    1356784.0          NaN       NaN   \n",
       "4        MichaelHaenni  Michael Haenni    2401474.0       Zürich        ZH   \n",
       "...                ...             ...          ...          ...       ...   \n",
       "15610    bernadett8136       Bernadett     969074.0      Calgary   Alberta   \n",
       "15611  lindsey15882007         Lindsey          NaN          NaN       NaN   \n",
       "15612     dorianne7021        Dorianne          NaN          NaN       NaN   \n",
       "15613   laurie99399806          Laurie          NaN          NaN       NaN   \n",
       "15614           sara42            Sara     701205.0  Great Falls  Virginia   \n",
       "\n",
       "      COUNTRY_CODE  MEMBER_SINCE      PERSONAL_URL OCCUPATION  \\\n",
       "0              NaN    1393520019               NaN        NaN   \n",
       "1              NaN    1462466084               NaN        NaN   \n",
       "2              NaN    1445444352               NaN        NaN   \n",
       "3              NaN    1369132003               NaN        NaN   \n",
       "4               CH    1243806271  www.digiinfo.com        CEO   \n",
       "...            ...           ...               ...        ...   \n",
       "15610           CA    1254103689               NaN        NaN   \n",
       "15611          NaN    1487697303               NaN        NaN   \n",
       "15612          NaN    1538457803               NaN        NaN   \n",
       "15613          NaN    1446796372               NaN        NaN   \n",
       "15614           US    1296054872               NaN        NaN   \n",
       "\n",
       "                                        LOAN_BECAUSE  \\\n",
       "0                                                NaN   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4          It's a good thing & fun at the same time.   \n",
       "...                                              ...   \n",
       "15610                                            NaN   \n",
       "15611                                            NaN   \n",
       "15612                                            NaN   \n",
       "15613                                            NaN   \n",
       "15614  Its a great small way to help people in need!   \n",
       "\n",
       "                                              OTHER_INFO  LOAN_PURCHASE_NUM  \\\n",
       "0                                                    NaN                 10   \n",
       "1                                                    NaN                  1   \n",
       "2                                                    NaN                  1   \n",
       "3                                                    NaN                 28   \n",
       "4      Develop and sell software for the graphic indu...                 29   \n",
       "...                                                  ...                ...   \n",
       "15610                                                NaN                 20   \n",
       "15611                                                NaN                  1   \n",
       "15612                                                NaN                  1   \n",
       "15613                                                NaN                  1   \n",
       "15614                                                NaN                 19   \n",
       "\n",
       "       INVITED_BY  NUM_INVITED  \n",
       "0             NaN            0  \n",
       "1             NaN            0  \n",
       "2             NaN            0  \n",
       "3             NaN            0  \n",
       "4             NaN            0  \n",
       "...           ...          ...  \n",
       "15610  Todd Skene            2  \n",
       "15611         NaN            0  \n",
       "15612         NaN            0  \n",
       "15613       Chris            0  \n",
       "15614         NaN            0  \n",
       "\n",
       "[15615 rows x 14 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lenders"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7adbfc69",
   "metadata": {
    "id": "7adbfc69"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 15615 entries, 0 to 15614\n",
      "Data columns (total 14 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   PERMANENT_NAME     15615 non-null  object \n",
      " 1   DISPLAY_NAME       15606 non-null  object \n",
      " 2   MAIN_PIC_ID        5177 non-null   float64\n",
      " 3   CITY               5471 non-null   object \n",
      " 4   STATE              5054 non-null   object \n",
      " 5   COUNTRY_CODE       6622 non-null   object \n",
      " 6   MEMBER_SINCE       15615 non-null  int64  \n",
      " 7   PERSONAL_URL       527 non-null    object \n",
      " 8   OCCUPATION         3427 non-null   object \n",
      " 9   LOAN_BECAUSE       1534 non-null   object \n",
      " 10  OTHER_INFO         930 non-null    object \n",
      " 11  LOAN_PURCHASE_NUM  15615 non-null  int64  \n",
      " 12  INVITED_BY         4092 non-null   object \n",
      " 13  NUM_INVITED        15615 non-null  int64  \n",
      "dtypes: float64(1), int64(3), object(10)\n",
      "memory usage: 1.7+ MB\n"
     ]
    }
   ],
   "source": [
    "lenders.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b86ec2fc",
   "metadata": {
    "id": "b86ec2fc"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LOAN_ID</th>\n",
       "      <th>LENDERS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1769794</td>\n",
       "      <td>nms, eric4199, susan6873, ryan24961252, lance5...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1508477</td>\n",
       "      <td>andreas28552681, valandderek2847, edwinhj, dav...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1415825</td>\n",
       "      <td>don2906, arkbankcorp, david21283743, ulf3267, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2026090</td>\n",
       "      <td>mike76198005, aaron83574977, pim5818, robert10...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1746398</td>\n",
       "      <td>chipinforchange, steven93385272, jasonreinhard...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20337</th>\n",
       "      <td>2098648</td>\n",
       "      <td>thessa1047, brenda8674, robertgetreuer, jerry5...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20338</th>\n",
       "      <td>1600729</td>\n",
       "      <td>john1972, david53937833, sanjiv6738, szucheng2...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20339</th>\n",
       "      <td>1999970</td>\n",
       "      <td>dave64237154, daniel94841801, samuel3417, ryan...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20340</th>\n",
       "      <td>949352</td>\n",
       "      <td>verne2519, david7063, scott86242469, sabina423...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20341</th>\n",
       "      <td>1011452</td>\n",
       "      <td>nms, jeffrey5226, joao1114, sonia8127, brynne4...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>20342 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       LOAN_ID                                            LENDERS\n",
       "0      1769794  nms, eric4199, susan6873, ryan24961252, lance5...\n",
       "1      1508477  andreas28552681, valandderek2847, edwinhj, dav...\n",
       "2      1415825  don2906, arkbankcorp, david21283743, ulf3267, ...\n",
       "3      2026090  mike76198005, aaron83574977, pim5818, robert10...\n",
       "4      1746398  chipinforchange, steven93385272, jasonreinhard...\n",
       "...        ...                                                ...\n",
       "20337  2098648  thessa1047, brenda8674, robertgetreuer, jerry5...\n",
       "20338  1600729  john1972, david53937833, sanjiv6738, szucheng2...\n",
       "20339  1999970  dave64237154, daniel94841801, samuel3417, ryan...\n",
       "20340   949352  verne2519, david7063, scott86242469, sabina423...\n",
       "20341  1011452  nms, jeffrey5226, joao1114, sonia8127, brynne4...\n",
       "\n",
       "[20342 rows x 2 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "loans_lenders"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7fbbdc86",
   "metadata": {
    "id": "7fbbdc86"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LOAN_ID</th>\n",
       "      <th>LOAN_NAME</th>\n",
       "      <th>ORIGINAL_LANGUAGE</th>\n",
       "      <th>DESCRIPTION</th>\n",
       "      <th>DESCRIPTION_TRANSLATED</th>\n",
       "      <th>FUNDED_AMOUNT</th>\n",
       "      <th>LOAN_AMOUNT</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>IMAGE_ID</th>\n",
       "      <th>VIDEO_ID</th>\n",
       "      <th>...</th>\n",
       "      <th>LENDER_TERM</th>\n",
       "      <th>NUM_LENDERS_TOTAL</th>\n",
       "      <th>NUM_JOURNAL_ENTRIES</th>\n",
       "      <th>NUM_BULK_ENTRIES</th>\n",
       "      <th>TAGS</th>\n",
       "      <th>BORROWER_NAMES</th>\n",
       "      <th>BORROWER_GENDERS</th>\n",
       "      <th>BORROWER_PICTURED</th>\n",
       "      <th>REPAYMENT_INTERVAL</th>\n",
       "      <th>DISTRIBUTION_MODEL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1570258</td>\n",
       "      <td>Manvel</td>\n",
       "      <td>English</td>\n",
       "      <td>Meet Manvel, a young and inspiring farmer from...</td>\n",
       "      <td>Meet Manvel, a young and inspiring farmer from...</td>\n",
       "      <td>2500</td>\n",
       "      <td>2500</td>\n",
       "      <td>funded</td>\n",
       "      <td>2900454.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>30</td>\n",
       "      <td>81</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>#Biz Durable Asset, #Single, user_favorite, #S...</td>\n",
       "      <td>Manvel</td>\n",
       "      <td>male</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>irregular</td>\n",
       "      <td>field_partner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>240272</td>\n",
       "      <td>Jargalsaihan</td>\n",
       "      <td>English</td>\n",
       "      <td>Jargalsaihan D. is 42 years old and lives with...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1250</td>\n",
       "      <td>1250</td>\n",
       "      <td>funded</td>\n",
       "      <td>621951.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>26</td>\n",
       "      <td>38</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Jargalsaihan</td>\n",
       "      <td>male</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>270125</td>\n",
       "      <td>SERGIO</td>\n",
       "      <td>Spanish</td>\n",
       "      <td>Sergio, reside en Lolotique departamento de Sa...</td>\n",
       "      <td>Sergio lives in Lolotique in the department of...</td>\n",
       "      <td>1000</td>\n",
       "      <td>1000</td>\n",
       "      <td>funded</td>\n",
       "      <td>704953.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>20</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SERGIO</td>\n",
       "      <td>male</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>709842</td>\n",
       "      <td>Ahmad</td>\n",
       "      <td>English</td>\n",
       "      <td>Ahmad is a 25–year-old single man, and is the ...</td>\n",
       "      <td>Ahmad is a 25–year-old single man, and is the ...</td>\n",
       "      <td>2000</td>\n",
       "      <td>2000</td>\n",
       "      <td>funded</td>\n",
       "      <td>1604084.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>14</td>\n",
       "      <td>37</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>user_favorite</td>\n",
       "      <td>Ahmad</td>\n",
       "      <td>male</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>223631</td>\n",
       "      <td>Patricia</td>\n",
       "      <td>English</td>\n",
       "      <td>Patricia is 25 years old and her husband is a ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>525</td>\n",
       "      <td>525</td>\n",
       "      <td>funded</td>\n",
       "      <td>585526.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Patricia</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20867</th>\n",
       "      <td>924772</td>\n",
       "      <td>Alaysa</td>\n",
       "      <td>English</td>\n",
       "      <td>Alaysa is happy and thankful for the continuou...</td>\n",
       "      <td>Alaysa is happy and thankful for the continuou...</td>\n",
       "      <td>550</td>\n",
       "      <td>550</td>\n",
       "      <td>funded</td>\n",
       "      <td>1810272.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>8</td>\n",
       "      <td>22</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>#Woman-Owned Business, #Repeat Borrower, #Parent</td>\n",
       "      <td>Alaysa</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20868</th>\n",
       "      <td>1925244</td>\n",
       "      <td>Jorrie Ann</td>\n",
       "      <td>English</td>\n",
       "      <td>Jorrie Ann is 20 years old and single with two...</td>\n",
       "      <td>Jorrie Ann is 20 years old and single with two...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>funded</td>\n",
       "      <td>3378550.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Jorrie Ann</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20869</th>\n",
       "      <td>374966</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1200</td>\n",
       "      <td>1200</td>\n",
       "      <td>funded</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>15</td>\n",
       "      <td>38</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20870</th>\n",
       "      <td>1227071</td>\n",
       "      <td>Maria del Carmen</td>\n",
       "      <td>Spanish</td>\n",
       "      <td>Doña Maria, tiene 67 años de edad, es madre so...</td>\n",
       "      <td>Maria is 67 years old. She is a single mother ...</td>\n",
       "      <td>525</td>\n",
       "      <td>525</td>\n",
       "      <td>funded</td>\n",
       "      <td>2425909.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>20</td>\n",
       "      <td>18</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>#Elderly, #Single, #Woman-Owned Business, #Rep...</td>\n",
       "      <td>Maria del Carmen</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20871</th>\n",
       "      <td>1763941</td>\n",
       "      <td>Ruby</td>\n",
       "      <td>English</td>\n",
       "      <td>Ruby is a 39-year-old businesswoman from Talav...</td>\n",
       "      <td>Ruby is a 39-year-old businesswoman from Talav...</td>\n",
       "      <td>400</td>\n",
       "      <td>400</td>\n",
       "      <td>funded</td>\n",
       "      <td>3156524.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>14</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>#Parent, user_favorite, #Health and Sanitation...</td>\n",
       "      <td>Ruby</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>20872 rows × 34 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       LOAN_ID         LOAN_NAME ORIGINAL_LANGUAGE  \\\n",
       "0      1570258            Manvel           English   \n",
       "1       240272      Jargalsaihan           English   \n",
       "2       270125            SERGIO           Spanish   \n",
       "3       709842             Ahmad           English   \n",
       "4       223631          Patricia           English   \n",
       "...        ...               ...               ...   \n",
       "20867   924772            Alaysa           English   \n",
       "20868  1925244        Jorrie Ann           English   \n",
       "20869   374966               NaN               NaN   \n",
       "20870  1227071  Maria del Carmen           Spanish   \n",
       "20871  1763941             Ruby            English   \n",
       "\n",
       "                                             DESCRIPTION  \\\n",
       "0      Meet Manvel, a young and inspiring farmer from...   \n",
       "1      Jargalsaihan D. is 42 years old and lives with...   \n",
       "2      Sergio, reside en Lolotique departamento de Sa...   \n",
       "3      Ahmad is a 25–year-old single man, and is the ...   \n",
       "4      Patricia is 25 years old and her husband is a ...   \n",
       "...                                                  ...   \n",
       "20867  Alaysa is happy and thankful for the continuou...   \n",
       "20868  Jorrie Ann is 20 years old and single with two...   \n",
       "20869                                                NaN   \n",
       "20870  Doña Maria, tiene 67 años de edad, es madre so...   \n",
       "20871  Ruby is a 39-year-old businesswoman from Talav...   \n",
       "\n",
       "                                  DESCRIPTION_TRANSLATED  FUNDED_AMOUNT  \\\n",
       "0      Meet Manvel, a young and inspiring farmer from...           2500   \n",
       "1                                                    NaN           1250   \n",
       "2      Sergio lives in Lolotique in the department of...           1000   \n",
       "3      Ahmad is a 25–year-old single man, and is the ...           2000   \n",
       "4                                                    NaN            525   \n",
       "...                                                  ...            ...   \n",
       "20867  Alaysa is happy and thankful for the continuou...            550   \n",
       "20868  Jorrie Ann is 20 years old and single with two...            100   \n",
       "20869                                                NaN           1200   \n",
       "20870  Maria is 67 years old. She is a single mother ...            525   \n",
       "20871  Ruby is a 39-year-old businesswoman from Talav...            400   \n",
       "\n",
       "       LOAN_AMOUNT  STATUS   IMAGE_ID  VIDEO_ID  ... LENDER_TERM  \\\n",
       "0             2500  funded  2900454.0       NaN  ...          30   \n",
       "1             1250  funded   621951.0       NaN  ...          26   \n",
       "2             1000  funded   704953.0       NaN  ...          20   \n",
       "3             2000  funded  1604084.0       NaN  ...          14   \n",
       "4              525  funded   585526.0       NaN  ...           6   \n",
       "...            ...     ...        ...       ...  ...         ...   \n",
       "20867          550  funded  1810272.0       NaN  ...           8   \n",
       "20868          100  funded  3378550.0       NaN  ...           8   \n",
       "20869         1200  funded        NaN       NaN  ...          15   \n",
       "20870          525  funded  2425909.0       NaN  ...          20   \n",
       "20871          400  funded  3156524.0       NaN  ...          14   \n",
       "\n",
       "      NUM_LENDERS_TOTAL NUM_JOURNAL_ENTRIES NUM_BULK_ENTRIES  \\\n",
       "0                    81                   1                1   \n",
       "1                    38                   3                2   \n",
       "2                    35                   1                1   \n",
       "3                    37                   2                1   \n",
       "4                    11                   1                1   \n",
       "...                 ...                 ...              ...   \n",
       "20867                22                   2                1   \n",
       "20868                 3                   1                1   \n",
       "20869                38                   2                1   \n",
       "20870                18                   2                1   \n",
       "20871                10                   1                1   \n",
       "\n",
       "                                                    TAGS    BORROWER_NAMES  \\\n",
       "0      #Biz Durable Asset, #Single, user_favorite, #S...            Manvel   \n",
       "1                                                    NaN      Jargalsaihan   \n",
       "2                                                    NaN            SERGIO   \n",
       "3                                          user_favorite             Ahmad   \n",
       "4                                                    NaN          Patricia   \n",
       "...                                                  ...               ...   \n",
       "20867   #Woman-Owned Business, #Repeat Borrower, #Parent            Alaysa   \n",
       "20868                                                NaN        Jorrie Ann   \n",
       "20869                                                NaN               NaN   \n",
       "20870  #Elderly, #Single, #Woman-Owned Business, #Rep...  Maria del Carmen   \n",
       "20871  #Parent, user_favorite, #Health and Sanitation...             Ruby    \n",
       "\n",
       "      BORROWER_GENDERS  BORROWER_PICTURED REPAYMENT_INTERVAL  \\\n",
       "0                 male               TRUE          irregular   \n",
       "1                 male               TRUE            monthly   \n",
       "2                 male               TRUE            monthly   \n",
       "3                 male               TRUE            monthly   \n",
       "4               female               TRUE            monthly   \n",
       "...                ...                ...                ...   \n",
       "20867           female               TRUE            monthly   \n",
       "20868           female               TRUE            monthly   \n",
       "20869              NaN                NaN            monthly   \n",
       "20870           female               TRUE            monthly   \n",
       "20871           female               TRUE            monthly   \n",
       "\n",
       "       DISTRIBUTION_MODEL  \n",
       "0           field_partner  \n",
       "1           field_partner  \n",
       "2           field_partner  \n",
       "3           field_partner  \n",
       "4           field_partner  \n",
       "...                   ...  \n",
       "20867       field_partner  \n",
       "20868       field_partner  \n",
       "20869       field_partner  \n",
       "20870       field_partner  \n",
       "20871       field_partner  \n",
       "\n",
       "[20872 rows x 34 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "loans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "11a3a6cc",
   "metadata": {
    "id": "11a3a6cc"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "fcffe330",
   "metadata": {
    "id": "fcffe330"
   },
   "outputs": [],
   "source": [
    "# merge the three tables together\n",
    "data = pd.merge(loans, loans_lenders, on='LOAN_ID')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d7980839",
   "metadata": {
    "id": "d7980839"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LOAN_ID</th>\n",
       "      <th>LOAN_NAME</th>\n",
       "      <th>ORIGINAL_LANGUAGE</th>\n",
       "      <th>DESCRIPTION</th>\n",
       "      <th>DESCRIPTION_TRANSLATED</th>\n",
       "      <th>FUNDED_AMOUNT</th>\n",
       "      <th>LOAN_AMOUNT</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>IMAGE_ID</th>\n",
       "      <th>VIDEO_ID</th>\n",
       "      <th>...</th>\n",
       "      <th>NUM_LENDERS_TOTAL</th>\n",
       "      <th>NUM_JOURNAL_ENTRIES</th>\n",
       "      <th>NUM_BULK_ENTRIES</th>\n",
       "      <th>TAGS</th>\n",
       "      <th>BORROWER_NAMES</th>\n",
       "      <th>BORROWER_GENDERS</th>\n",
       "      <th>BORROWER_PICTURED</th>\n",
       "      <th>REPAYMENT_INTERVAL</th>\n",
       "      <th>DISTRIBUTION_MODEL</th>\n",
       "      <th>LENDERS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1381832</td>\n",
       "      <td>Naim</td>\n",
       "      <td>English</td>\n",
       "      <td>Naim and his wife, seen in the photo, make dra...</td>\n",
       "      <td>Naim and his wife, seen in the photo, make dra...</td>\n",
       "      <td>450</td>\n",
       "      <td>450</td>\n",
       "      <td>funded</td>\n",
       "      <td>2641706.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>18</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>user_favorite, #Fabrics, #Repeat Borrower, use...</td>\n",
       "      <td>Naim</td>\n",
       "      <td>male</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>nms, deborah3369, roch3790, eemeli, peter1394,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1661857</td>\n",
       "      <td>Victorine</td>\n",
       "      <td>French</td>\n",
       "      <td>Victorine a 44 ans, elle est mariée et mère de...</td>\n",
       "      <td>Victorine is 44 years old; she is married and ...</td>\n",
       "      <td>300</td>\n",
       "      <td>300</td>\n",
       "      <td>funded</td>\n",
       "      <td>3019715.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Victorine</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>howard4162, zim7148, jensdamsgaardvanar, wakib...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>481829</td>\n",
       "      <td>JUMWA</td>\n",
       "      <td>English</td>\n",
       "      <td>Jumwa lives in Malindi area of Coast Province,...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>funded</td>\n",
       "      <td>1212629.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>JUMWA</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>amalia7769, harry6481, rotaryclub5091, dean221...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1532219</td>\n",
       "      <td>Georgewilliam</td>\n",
       "      <td>English</td>\n",
       "      <td>The 52-year-old father of five children ages 2...</td>\n",
       "      <td>The 52-year-old father of five children ages 2...</td>\n",
       "      <td>825</td>\n",
       "      <td>825</td>\n",
       "      <td>funded</td>\n",
       "      <td>2851840.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>#Elderly, user_favorite, #Schooling</td>\n",
       "      <td>Georgewilliam</td>\n",
       "      <td>male</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>matyas8432, koreyb, ellen2903, william9193, Ri...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1823494</td>\n",
       "      <td>Anthony</td>\n",
       "      <td>English</td>\n",
       "      <td>Anthony, a 48-year-old dad of lovely children,...</td>\n",
       "      <td>Anthony, a 48-year-old dad of lovely children,...</td>\n",
       "      <td>500</td>\n",
       "      <td>500</td>\n",
       "      <td>funded</td>\n",
       "      <td>3236275.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>16</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>#Animals, user_favorite, #Biz Durable Asset, #...</td>\n",
       "      <td>Anthony</td>\n",
       "      <td>male</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>stefanofsweden, kaushal2745, themissionbeltco,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>243224</td>\n",
       "      <td>Kenya del Socorro</td>\n",
       "      <td>Spanish</td>\n",
       "      <td>Kenya de  30 años de edad es casada con el Sr....</td>\n",
       "      <td>Kenya, 30, lives with her husband, Donald Sand...</td>\n",
       "      <td>925</td>\n",
       "      <td>925</td>\n",
       "      <td>funded</td>\n",
       "      <td>628185.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Kenya del Socorro</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>bullet</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>berliner, kujo78, heike9380, stannes2181, boba...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>1636168</td>\n",
       "      <td>Benvenida</td>\n",
       "      <td>English</td>\n",
       "      <td>Benvenida works hard to support four children....</td>\n",
       "      <td>Benvenida works hard to support four children....</td>\n",
       "      <td>125</td>\n",
       "      <td>125</td>\n",
       "      <td>funded</td>\n",
       "      <td>2986179.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>#Health and Sanitation, #Eco-friendly</td>\n",
       "      <td>Benvenida</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>davidandsusan9466, lenderj, daniel6013, trollt...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190</th>\n",
       "      <td>108195</td>\n",
       "      <td>COSMOS RSR Group</td>\n",
       "      <td>Spanish</td>\n",
       "      <td>Banco Comunal “Cosmos RSR” esta representado ...</td>\n",
       "      <td>Village Bank “Cosmos RSR” is represented by Mr...</td>\n",
       "      <td>3350</td>\n",
       "      <td>3350</td>\n",
       "      <td>funded</td>\n",
       "      <td>318977.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>120</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>GLORIA, RITA, ROXANA FRANCIA, JOSE LUIS, EULOG...</td>\n",
       "      <td>female, female, female, male, male, female, fe...</td>\n",
       "      <td>true, true, true, false, true, true, false, tr...</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>bob3617, kurt7817, rotaryclubgibsons5839, naza...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>191</th>\n",
       "      <td>525045</td>\n",
       "      <td>MANUEL ISRAEL</td>\n",
       "      <td>Spanish</td>\n",
       "      <td>Manuel, quiere continuar fortaleciendo el nego...</td>\n",
       "      <td>Manuel would like to continue strengthening hi...</td>\n",
       "      <td>400</td>\n",
       "      <td>400</td>\n",
       "      <td>funded</td>\n",
       "      <td>1023073.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>15</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>MANUEL ISRAEL</td>\n",
       "      <td>male</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>irregular</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>antony5175, shirley1905, magdalena9892, albin,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>1706421</td>\n",
       "      <td>Shazia</td>\n",
       "      <td>English</td>\n",
       "      <td>This is Shazia, a married woman who lives with...</td>\n",
       "      <td>This is Shazia, a married woman who lives with...</td>\n",
       "      <td>300</td>\n",
       "      <td>300</td>\n",
       "      <td>funded</td>\n",
       "      <td>3078883.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>#Fabrics</td>\n",
       "      <td>Shazia</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>david53937833, kamran5659, faisal4236, charlie...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>193 rows × 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     LOAN_ID          LOAN_NAME ORIGINAL_LANGUAGE  \\\n",
       "0    1381832               Naim           English   \n",
       "1    1661857          Victorine            French   \n",
       "2     481829              JUMWA           English   \n",
       "3    1532219      Georgewilliam           English   \n",
       "4    1823494            Anthony           English   \n",
       "..       ...                ...               ...   \n",
       "188   243224  Kenya del Socorro           Spanish   \n",
       "189  1636168          Benvenida           English   \n",
       "190   108195   COSMOS RSR Group           Spanish   \n",
       "191   525045      MANUEL ISRAEL           Spanish   \n",
       "192  1706421             Shazia           English   \n",
       "\n",
       "                                           DESCRIPTION  \\\n",
       "0    Naim and his wife, seen in the photo, make dra...   \n",
       "1    Victorine a 44 ans, elle est mariée et mère de...   \n",
       "2    Jumwa lives in Malindi area of Coast Province,...   \n",
       "3    The 52-year-old father of five children ages 2...   \n",
       "4    Anthony, a 48-year-old dad of lovely children,...   \n",
       "..                                                 ...   \n",
       "188  Kenya de  30 años de edad es casada con el Sr....   \n",
       "189  Benvenida works hard to support four children....   \n",
       "190   Banco Comunal “Cosmos RSR” esta representado ...   \n",
       "191  Manuel, quiere continuar fortaleciendo el nego...   \n",
       "192  This is Shazia, a married woman who lives with...   \n",
       "\n",
       "                                DESCRIPTION_TRANSLATED  FUNDED_AMOUNT  \\\n",
       "0    Naim and his wife, seen in the photo, make dra...            450   \n",
       "1    Victorine is 44 years old; she is married and ...            300   \n",
       "2                                                  NaN            250   \n",
       "3    The 52-year-old father of five children ages 2...            825   \n",
       "4    Anthony, a 48-year-old dad of lovely children,...            500   \n",
       "..                                                 ...            ...   \n",
       "188  Kenya, 30, lives with her husband, Donald Sand...            925   \n",
       "189  Benvenida works hard to support four children....            125   \n",
       "190  Village Bank “Cosmos RSR” is represented by Mr...           3350   \n",
       "191  Manuel would like to continue strengthening hi...            400   \n",
       "192  This is Shazia, a married woman who lives with...            300   \n",
       "\n",
       "     LOAN_AMOUNT  STATUS   IMAGE_ID  VIDEO_ID  ... NUM_LENDERS_TOTAL  \\\n",
       "0            450  funded  2641706.0       NaN  ...                18   \n",
       "1            300  funded  3019715.0       NaN  ...                12   \n",
       "2            250  funded  1212629.0       NaN  ...                 9   \n",
       "3            825  funded  2851840.0       NaN  ...                32   \n",
       "4            500  funded  3236275.0       NaN  ...                16   \n",
       "..           ...     ...        ...       ...  ...               ...   \n",
       "188          925  funded   628185.0       NaN  ...                28   \n",
       "189          125  funded  2986179.0       NaN  ...                 5   \n",
       "190         3350  funded   318977.0       NaN  ...               120   \n",
       "191          400  funded  1023073.0       NaN  ...                15   \n",
       "192          300  funded  3078883.0       NaN  ...                12   \n",
       "\n",
       "    NUM_JOURNAL_ENTRIES NUM_BULK_ENTRIES  \\\n",
       "0                     2                1   \n",
       "1                     1                1   \n",
       "2                     1                1   \n",
       "3                     1                1   \n",
       "4                     2                1   \n",
       "..                  ...              ...   \n",
       "188                   1                1   \n",
       "189                   1                1   \n",
       "190                   3                2   \n",
       "191                   2                1   \n",
       "192                   1                1   \n",
       "\n",
       "                                                  TAGS  \\\n",
       "0    user_favorite, #Fabrics, #Repeat Borrower, use...   \n",
       "1                                                  NaN   \n",
       "2                                                  NaN   \n",
       "3                  #Elderly, user_favorite, #Schooling   \n",
       "4    #Animals, user_favorite, #Biz Durable Asset, #...   \n",
       "..                                                 ...   \n",
       "188                                                NaN   \n",
       "189              #Health and Sanitation, #Eco-friendly   \n",
       "190                                                NaN   \n",
       "191                                                NaN   \n",
       "192                                           #Fabrics   \n",
       "\n",
       "                                        BORROWER_NAMES  \\\n",
       "0                                                 Naim   \n",
       "1                                            Victorine   \n",
       "2                                                JUMWA   \n",
       "3                                        Georgewilliam   \n",
       "4                                              Anthony   \n",
       "..                                                 ...   \n",
       "188                                  Kenya del Socorro   \n",
       "189                                          Benvenida   \n",
       "190  GLORIA, RITA, ROXANA FRANCIA, JOSE LUIS, EULOG...   \n",
       "191                                      MANUEL ISRAEL   \n",
       "192                                             Shazia   \n",
       "\n",
       "                                      BORROWER_GENDERS  \\\n",
       "0                                                 male   \n",
       "1                                               female   \n",
       "2                                               female   \n",
       "3                                                 male   \n",
       "4                                                 male   \n",
       "..                                                 ...   \n",
       "188                                             female   \n",
       "189                                             female   \n",
       "190  female, female, female, male, male, female, fe...   \n",
       "191                                               male   \n",
       "192                                             female   \n",
       "\n",
       "                                     BORROWER_PICTURED  REPAYMENT_INTERVAL  \\\n",
       "0                                                 TRUE             monthly   \n",
       "1                                                 TRUE             monthly   \n",
       "2                                                 TRUE             monthly   \n",
       "3                                                 TRUE             monthly   \n",
       "4                                                 TRUE             monthly   \n",
       "..                                                 ...                 ...   \n",
       "188                                               TRUE              bullet   \n",
       "189                                               TRUE             monthly   \n",
       "190  true, true, true, false, true, true, false, tr...             monthly   \n",
       "191                                               TRUE           irregular   \n",
       "192                                               TRUE             monthly   \n",
       "\n",
       "    DISTRIBUTION_MODEL                                            LENDERS  \n",
       "0        field_partner  nms, deborah3369, roch3790, eemeli, peter1394,...  \n",
       "1        field_partner  howard4162, zim7148, jensdamsgaardvanar, wakib...  \n",
       "2        field_partner  amalia7769, harry6481, rotaryclub5091, dean221...  \n",
       "3        field_partner  matyas8432, koreyb, ellen2903, william9193, Ri...  \n",
       "4        field_partner  stefanofsweden, kaushal2745, themissionbeltco,...  \n",
       "..                 ...                                                ...  \n",
       "188      field_partner  berliner, kujo78, heike9380, stannes2181, boba...  \n",
       "189      field_partner  davidandsusan9466, lenderj, daniel6013, trollt...  \n",
       "190      field_partner  bob3617, kurt7817, rotaryclubgibsons5839, naza...  \n",
       "191      field_partner  antony5175, shirley1905, magdalena9892, albin,...  \n",
       "192      field_partner  david53937833, kamran5659, faisal4236, charlie...  \n",
       "\n",
       "[193 rows x 35 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "56b89bd6",
   "metadata": {
    "id": "56b89bd6"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LOAN_ID</th>\n",
       "      <th>LOAN_NAME</th>\n",
       "      <th>ORIGINAL_LANGUAGE</th>\n",
       "      <th>DESCRIPTION</th>\n",
       "      <th>DESCRIPTION_TRANSLATED</th>\n",
       "      <th>FUNDED_AMOUNT</th>\n",
       "      <th>LOAN_AMOUNT</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>IMAGE_ID</th>\n",
       "      <th>VIDEO_ID</th>\n",
       "      <th>...</th>\n",
       "      <th>NUM_LENDERS_TOTAL</th>\n",
       "      <th>NUM_JOURNAL_ENTRIES</th>\n",
       "      <th>NUM_BULK_ENTRIES</th>\n",
       "      <th>TAGS</th>\n",
       "      <th>BORROWER_NAMES</th>\n",
       "      <th>BORROWER_GENDERS</th>\n",
       "      <th>BORROWER_PICTURED</th>\n",
       "      <th>REPAYMENT_INTERVAL</th>\n",
       "      <th>DISTRIBUTION_MODEL</th>\n",
       "      <th>LENDERS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1381832</td>\n",
       "      <td>Naim</td>\n",
       "      <td>English</td>\n",
       "      <td>Naim and his wife, seen in the photo, make dra...</td>\n",
       "      <td>Naim and his wife, seen in the photo, make dra...</td>\n",
       "      <td>450</td>\n",
       "      <td>450</td>\n",
       "      <td>funded</td>\n",
       "      <td>2641706.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>18</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>user_favorite, #Fabrics, #Repeat Borrower, use...</td>\n",
       "      <td>Naim</td>\n",
       "      <td>male</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>nms, deborah3369, roch3790, eemeli, peter1394,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1661857</td>\n",
       "      <td>Victorine</td>\n",
       "      <td>French</td>\n",
       "      <td>Victorine a 44 ans, elle est mariée et mère de...</td>\n",
       "      <td>Victorine is 44 years old; she is married and ...</td>\n",
       "      <td>300</td>\n",
       "      <td>300</td>\n",
       "      <td>funded</td>\n",
       "      <td>3019715.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Victorine</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>howard4162, zim7148, jensdamsgaardvanar, wakib...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>481829</td>\n",
       "      <td>JUMWA</td>\n",
       "      <td>English</td>\n",
       "      <td>Jumwa lives in Malindi area of Coast Province,...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>funded</td>\n",
       "      <td>1212629.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>JUMWA</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>amalia7769, harry6481, rotaryclub5091, dean221...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1532219</td>\n",
       "      <td>Georgewilliam</td>\n",
       "      <td>English</td>\n",
       "      <td>The 52-year-old father of five children ages 2...</td>\n",
       "      <td>The 52-year-old father of five children ages 2...</td>\n",
       "      <td>825</td>\n",
       "      <td>825</td>\n",
       "      <td>funded</td>\n",
       "      <td>2851840.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>#Elderly, user_favorite, #Schooling</td>\n",
       "      <td>Georgewilliam</td>\n",
       "      <td>male</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>matyas8432, koreyb, ellen2903, william9193, Ri...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1823494</td>\n",
       "      <td>Anthony</td>\n",
       "      <td>English</td>\n",
       "      <td>Anthony, a 48-year-old dad of lovely children,...</td>\n",
       "      <td>Anthony, a 48-year-old dad of lovely children,...</td>\n",
       "      <td>500</td>\n",
       "      <td>500</td>\n",
       "      <td>funded</td>\n",
       "      <td>3236275.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>16</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>#Animals, user_favorite, #Biz Durable Asset, #...</td>\n",
       "      <td>Anthony</td>\n",
       "      <td>male</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>stefanofsweden, kaushal2745, themissionbeltco,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>243224</td>\n",
       "      <td>Kenya del Socorro</td>\n",
       "      <td>Spanish</td>\n",
       "      <td>Kenya de  30 años de edad es casada con el Sr....</td>\n",
       "      <td>Kenya, 30, lives with her husband, Donald Sand...</td>\n",
       "      <td>925</td>\n",
       "      <td>925</td>\n",
       "      <td>funded</td>\n",
       "      <td>628185.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Kenya del Socorro</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>bullet</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>berliner, kujo78, heike9380, stannes2181, boba...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>1636168</td>\n",
       "      <td>Benvenida</td>\n",
       "      <td>English</td>\n",
       "      <td>Benvenida works hard to support four children....</td>\n",
       "      <td>Benvenida works hard to support four children....</td>\n",
       "      <td>125</td>\n",
       "      <td>125</td>\n",
       "      <td>funded</td>\n",
       "      <td>2986179.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>#Health and Sanitation, #Eco-friendly</td>\n",
       "      <td>Benvenida</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>davidandsusan9466, lenderj, daniel6013, trollt...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190</th>\n",
       "      <td>108195</td>\n",
       "      <td>COSMOS RSR Group</td>\n",
       "      <td>Spanish</td>\n",
       "      <td>Banco Comunal “Cosmos RSR” esta representado ...</td>\n",
       "      <td>Village Bank “Cosmos RSR” is represented by Mr...</td>\n",
       "      <td>3350</td>\n",
       "      <td>3350</td>\n",
       "      <td>funded</td>\n",
       "      <td>318977.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>120</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>GLORIA, RITA, ROXANA FRANCIA, JOSE LUIS, EULOG...</td>\n",
       "      <td>female, female, female, male, male, female, fe...</td>\n",
       "      <td>true, true, true, false, true, true, false, tr...</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>bob3617, kurt7817, rotaryclubgibsons5839, naza...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>191</th>\n",
       "      <td>525045</td>\n",
       "      <td>MANUEL ISRAEL</td>\n",
       "      <td>Spanish</td>\n",
       "      <td>Manuel, quiere continuar fortaleciendo el nego...</td>\n",
       "      <td>Manuel would like to continue strengthening hi...</td>\n",
       "      <td>400</td>\n",
       "      <td>400</td>\n",
       "      <td>funded</td>\n",
       "      <td>1023073.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>15</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>MANUEL ISRAEL</td>\n",
       "      <td>male</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>irregular</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>antony5175, shirley1905, magdalena9892, albin,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>1706421</td>\n",
       "      <td>Shazia</td>\n",
       "      <td>English</td>\n",
       "      <td>This is Shazia, a married woman who lives with...</td>\n",
       "      <td>This is Shazia, a married woman who lives with...</td>\n",
       "      <td>300</td>\n",
       "      <td>300</td>\n",
       "      <td>funded</td>\n",
       "      <td>3078883.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>#Fabrics</td>\n",
       "      <td>Shazia</td>\n",
       "      <td>female</td>\n",
       "      <td>TRUE</td>\n",
       "      <td>monthly</td>\n",
       "      <td>field_partner</td>\n",
       "      <td>david53937833, kamran5659, faisal4236, charlie...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>193 rows × 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     LOAN_ID          LOAN_NAME ORIGINAL_LANGUAGE  \\\n",
       "0    1381832               Naim           English   \n",
       "1    1661857          Victorine            French   \n",
       "2     481829              JUMWA           English   \n",
       "3    1532219      Georgewilliam           English   \n",
       "4    1823494            Anthony           English   \n",
       "..       ...                ...               ...   \n",
       "188   243224  Kenya del Socorro           Spanish   \n",
       "189  1636168          Benvenida           English   \n",
       "190   108195   COSMOS RSR Group           Spanish   \n",
       "191   525045      MANUEL ISRAEL           Spanish   \n",
       "192  1706421             Shazia           English   \n",
       "\n",
       "                                           DESCRIPTION  \\\n",
       "0    Naim and his wife, seen in the photo, make dra...   \n",
       "1    Victorine a 44 ans, elle est mariée et mère de...   \n",
       "2    Jumwa lives in Malindi area of Coast Province,...   \n",
       "3    The 52-year-old father of five children ages 2...   \n",
       "4    Anthony, a 48-year-old dad of lovely children,...   \n",
       "..                                                 ...   \n",
       "188  Kenya de  30 años de edad es casada con el Sr....   \n",
       "189  Benvenida works hard to support four children....   \n",
       "190   Banco Comunal “Cosmos RSR” esta representado ...   \n",
       "191  Manuel, quiere continuar fortaleciendo el nego...   \n",
       "192  This is Shazia, a married woman who lives with...   \n",
       "\n",
       "                                DESCRIPTION_TRANSLATED  FUNDED_AMOUNT  \\\n",
       "0    Naim and his wife, seen in the photo, make dra...            450   \n",
       "1    Victorine is 44 years old; she is married and ...            300   \n",
       "2                                                  NaN            250   \n",
       "3    The 52-year-old father of five children ages 2...            825   \n",
       "4    Anthony, a 48-year-old dad of lovely children,...            500   \n",
       "..                                                 ...            ...   \n",
       "188  Kenya, 30, lives with her husband, Donald Sand...            925   \n",
       "189  Benvenida works hard to support four children....            125   \n",
       "190  Village Bank “Cosmos RSR” is represented by Mr...           3350   \n",
       "191  Manuel would like to continue strengthening hi...            400   \n",
       "192  This is Shazia, a married woman who lives with...            300   \n",
       "\n",
       "     LOAN_AMOUNT  STATUS   IMAGE_ID  VIDEO_ID  ... NUM_LENDERS_TOTAL  \\\n",
       "0            450  funded  2641706.0       NaN  ...                18   \n",
       "1            300  funded  3019715.0       NaN  ...                12   \n",
       "2            250  funded  1212629.0       NaN  ...                 9   \n",
       "3            825  funded  2851840.0       NaN  ...                32   \n",
       "4            500  funded  3236275.0       NaN  ...                16   \n",
       "..           ...     ...        ...       ...  ...               ...   \n",
       "188          925  funded   628185.0       NaN  ...                28   \n",
       "189          125  funded  2986179.0       NaN  ...                 5   \n",
       "190         3350  funded   318977.0       NaN  ...               120   \n",
       "191          400  funded  1023073.0       NaN  ...                15   \n",
       "192          300  funded  3078883.0       NaN  ...                12   \n",
       "\n",
       "    NUM_JOURNAL_ENTRIES NUM_BULK_ENTRIES  \\\n",
       "0                     2                1   \n",
       "1                     1                1   \n",
       "2                     1                1   \n",
       "3                     1                1   \n",
       "4                     2                1   \n",
       "..                  ...              ...   \n",
       "188                   1                1   \n",
       "189                   1                1   \n",
       "190                   3                2   \n",
       "191                   2                1   \n",
       "192                   1                1   \n",
       "\n",
       "                                                  TAGS  \\\n",
       "0    user_favorite, #Fabrics, #Repeat Borrower, use...   \n",
       "1                                                  NaN   \n",
       "2                                                  NaN   \n",
       "3                  #Elderly, user_favorite, #Schooling   \n",
       "4    #Animals, user_favorite, #Biz Durable Asset, #...   \n",
       "..                                                 ...   \n",
       "188                                                NaN   \n",
       "189              #Health and Sanitation, #Eco-friendly   \n",
       "190                                                NaN   \n",
       "191                                                NaN   \n",
       "192                                           #Fabrics   \n",
       "\n",
       "                                        BORROWER_NAMES  \\\n",
       "0                                                 Naim   \n",
       "1                                            Victorine   \n",
       "2                                                JUMWA   \n",
       "3                                        Georgewilliam   \n",
       "4                                              Anthony   \n",
       "..                                                 ...   \n",
       "188                                  Kenya del Socorro   \n",
       "189                                          Benvenida   \n",
       "190  GLORIA, RITA, ROXANA FRANCIA, JOSE LUIS, EULOG...   \n",
       "191                                      MANUEL ISRAEL   \n",
       "192                                             Shazia   \n",
       "\n",
       "                                      BORROWER_GENDERS  \\\n",
       "0                                                 male   \n",
       "1                                               female   \n",
       "2                                               female   \n",
       "3                                                 male   \n",
       "4                                                 male   \n",
       "..                                                 ...   \n",
       "188                                             female   \n",
       "189                                             female   \n",
       "190  female, female, female, male, male, female, fe...   \n",
       "191                                               male   \n",
       "192                                             female   \n",
       "\n",
       "                                     BORROWER_PICTURED  REPAYMENT_INTERVAL  \\\n",
       "0                                                 TRUE             monthly   \n",
       "1                                                 TRUE             monthly   \n",
       "2                                                 TRUE             monthly   \n",
       "3                                                 TRUE             monthly   \n",
       "4                                                 TRUE             monthly   \n",
       "..                                                 ...                 ...   \n",
       "188                                               TRUE              bullet   \n",
       "189                                               TRUE             monthly   \n",
       "190  true, true, true, false, true, true, false, tr...             monthly   \n",
       "191                                               TRUE           irregular   \n",
       "192                                               TRUE             monthly   \n",
       "\n",
       "    DISTRIBUTION_MODEL                                            LENDERS  \n",
       "0        field_partner  nms, deborah3369, roch3790, eemeli, peter1394,...  \n",
       "1        field_partner  howard4162, zim7148, jensdamsgaardvanar, wakib...  \n",
       "2        field_partner  amalia7769, harry6481, rotaryclub5091, dean221...  \n",
       "3        field_partner  matyas8432, koreyb, ellen2903, william9193, Ri...  \n",
       "4        field_partner  stefanofsweden, kaushal2745, themissionbeltco,...  \n",
       "..                 ...                                                ...  \n",
       "188      field_partner  berliner, kujo78, heike9380, stannes2181, boba...  \n",
       "189      field_partner  davidandsusan9466, lenderj, daniel6013, trollt...  \n",
       "190      field_partner  bob3617, kurt7817, rotaryclubgibsons5839, naza...  \n",
       "191      field_partner  antony5175, shirley1905, magdalena9892, albin,...  \n",
       "192      field_partner  david53937833, kamran5659, faisal4236, charlie...  \n",
       "\n",
       "[193 rows x 35 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# find the top 10 members who have contributed to the most loans\n",
    "data.groupby('LOAN_ID').head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ea5664b0",
   "metadata": {
    "id": "ea5664b0"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 193 entries, 0 to 192\n",
      "Data columns (total 35 columns):\n",
      " #   Column                           Non-Null Count  Dtype  \n",
      "---  ------                           --------------  -----  \n",
      " 0   LOAN_ID                          193 non-null    int64  \n",
      " 1   LOAN_NAME                        191 non-null    object \n",
      " 2   ORIGINAL_LANGUAGE                191 non-null    object \n",
      " 3   DESCRIPTION                      191 non-null    object \n",
      " 4   DESCRIPTION_TRANSLATED           157 non-null    object \n",
      " 5   FUNDED_AMOUNT                    193 non-null    int64  \n",
      " 6   LOAN_AMOUNT                      193 non-null    int64  \n",
      " 7   STATUS                           193 non-null    object \n",
      " 8   IMAGE_ID                         191 non-null    float64\n",
      " 9   VIDEO_ID                         0 non-null      float64\n",
      " 10  ACTIVITY_NAME                    193 non-null    object \n",
      " 11  SECTOR_NAME                      193 non-null    object \n",
      " 12  LOAN_USE                         191 non-null    object \n",
      " 13  COUNTRY_CODE                     193 non-null    object \n",
      " 14  COUNTRY_NAME                     193 non-null    object \n",
      " 15  TOWN_NAME                        181 non-null    object \n",
      " 16  CURRENCY_POLICY                  193 non-null    object \n",
      " 17  CURRENCY_EXCHANGE_COVERAGE_RATE  143 non-null    float64\n",
      " 18  CURRENCY                         193 non-null    object \n",
      " 19  PARTNER_ID                       190 non-null    float64\n",
      " 20  POSTED_TIME                      193 non-null    object \n",
      " 21  PLANNED_EXPIRATION_TIME          155 non-null    object \n",
      " 22  DISBURSE_TIME                    193 non-null    object \n",
      " 23  RAISED_TIME                      186 non-null    object \n",
      " 24  LENDER_TERM                      193 non-null    int64  \n",
      " 25  NUM_LENDERS_TOTAL                193 non-null    int64  \n",
      " 26  NUM_JOURNAL_ENTRIES              193 non-null    int64  \n",
      " 27  NUM_BULK_ENTRIES                 193 non-null    int64  \n",
      " 28  TAGS                             104 non-null    object \n",
      " 29  BORROWER_NAMES                   191 non-null    object \n",
      " 30  BORROWER_GENDERS                 191 non-null    object \n",
      " 31  BORROWER_PICTURED                191 non-null    object \n",
      " 32  REPAYMENT_INTERVAL               193 non-null    object \n",
      " 33  DISTRIBUTION_MODEL               193 non-null    object \n",
      " 34  LENDERS                          193 non-null    object \n",
      "dtypes: float64(4), int64(7), object(24)\n",
      "memory usage: 54.3+ KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "172c3461",
   "metadata": {
    "id": "172c3461"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LOAN_ID</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LOAN_ID</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8425</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23968</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30499</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48866</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75634</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2051432</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2076459</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2084885</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2085535</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2126160</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>193 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         LOAN_ID\n",
       "LOAN_ID         \n",
       "8425           1\n",
       "23968          1\n",
       "30499          1\n",
       "48866          1\n",
       "75634          1\n",
       "...          ...\n",
       "2051432        1\n",
       "2076459        1\n",
       "2084885        1\n",
       "2085535        1\n",
       "2126160        1\n",
       "\n",
       "[193 rows x 1 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# find the total number of loans a member has contributed to\n",
    "data.groupby('LOAN_ID').agg({'LOAN_ID': 'count'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "6551c9b1",
   "metadata": {
    "id": "6551c9b1"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LOAN_AMOUNT</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LOAN_ID</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8425</th>\n",
       "      <td>1200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23968</th>\n",
       "      <td>1000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30499</th>\n",
       "      <td>400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48866</th>\n",
       "      <td>725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75634</th>\n",
       "      <td>600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2051432</th>\n",
       "      <td>650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2076459</th>\n",
       "      <td>225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2084885</th>\n",
       "      <td>500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2085535</th>\n",
       "      <td>350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2126160</th>\n",
       "      <td>2375</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>193 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         LOAN_AMOUNT\n",
       "LOAN_ID             \n",
       "8425            1200\n",
       "23968           1000\n",
       "30499            400\n",
       "48866            725\n",
       "75634            600\n",
       "...              ...\n",
       "2051432          650\n",
       "2076459          225\n",
       "2084885          500\n",
       "2085535          350\n",
       "2126160         2375\n",
       "\n",
       "[193 rows x 1 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# find the average loan size\n",
    "data.groupby('LOAN_ID').agg({'LOAN_AMOUNT': 'mean'}) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "c6396bbe",
   "metadata": {
    "id": "c6396bbe"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CURRENCY_EXCHANGE_COVERAGE_RATE</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LOAN_ID</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8425</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23968</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30499</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48866</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75634</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2051432</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2076459</th>\n",
       "      <td>0.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2084885</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2085535</th>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2126160</th>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>193 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         CURRENCY_EXCHANGE_COVERAGE_RATE\n",
       "LOAN_ID                                 \n",
       "8425                                 NaN\n",
       "23968                                NaN\n",
       "30499                                NaN\n",
       "48866                                NaN\n",
       "75634                                NaN\n",
       "...                                  ...\n",
       "2051432                              NaN\n",
       "2076459                              0.1\n",
       "2084885                              NaN\n",
       "2085535                              0.0\n",
       "2126160                              0.0\n",
       "\n",
       "[193 rows x 1 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# find the average CURRENCY_EXCHANGE_COVERAGE_RATE\n",
    "data.groupby('LOAN_ID').agg({'CURRENCY_EXCHANGE_COVERAGE_RATE': 'mean'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "41bffb05",
   "metadata": {
    "id": "41bffb05"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LENDER_TERM</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LOAN_ID</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8425</th>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23968</th>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30499</th>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48866</th>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75634</th>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2051432</th>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2076459</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2084885</th>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2085535</th>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2126160</th>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>193 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         LENDER_TERM\n",
       "LOAN_ID             \n",
       "8425              11\n",
       "23968             15\n",
       "30499             12\n",
       "48866              9\n",
       "75634             14\n",
       "...              ...\n",
       "2051432            9\n",
       "2076459            8\n",
       "2084885           14\n",
       "2085535           15\n",
       "2126160           26\n",
       "\n",
       "[193 rows x 1 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# find the average term length\n",
    "data.groupby('LOAN_ID').agg({'LENDER_TERM': 'mean'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "6d564c2e",
   "metadata": {
    "id": "6d564c2e"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# find the number of unique values for the STATUS variable\n",
    "loans['STATUS'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "05e5051a",
   "metadata": {
    "id": "05e5051a"
   },
   "outputs": [],
   "source": [
    "# map the values to 0 and 1\n",
    "loans['STATUS'] = loans['STATUS'].map({'active': 0, 'fundraising': 1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "7d79b723",
   "metadata": {
    "id": "7d79b723"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LOAN_ID                            20872\n",
       "LOAN_NAME                          20371\n",
       "ORIGINAL_LANGUAGE                  20416\n",
       "DESCRIPTION                        20416\n",
       "DESCRIPTION_TRANSLATED             16314\n",
       "FUNDED_AMOUNT                      20872\n",
       "LOAN_AMOUNT                        20872\n",
       "STATUS                                 0\n",
       "IMAGE_ID                           20416\n",
       "VIDEO_ID                              13\n",
       "ACTIVITY_NAME                      20872\n",
       "SECTOR_NAME                        20872\n",
       "LOAN_USE                           20416\n",
       "COUNTRY_CODE                       20872\n",
       "COUNTRY_NAME                       20872\n",
       "TOWN_NAME                          19099\n",
       "CURRENCY_POLICY                    20872\n",
       "CURRENCY_EXCHANGE_COVERAGE_RATE    16153\n",
       "CURRENCY                           20872\n",
       "PARTNER_ID                         20668\n",
       "POSTED_TIME                        20872\n",
       "PLANNED_EXPIRATION_TIME            17213\n",
       "DISBURSE_TIME                      20838\n",
       "RAISED_TIME                        19838\n",
       "LENDER_TERM                        20872\n",
       "NUM_LENDERS_TOTAL                  20872\n",
       "NUM_JOURNAL_ENTRIES                20872\n",
       "NUM_BULK_ENTRIES                   20872\n",
       "TAGS                               11519\n",
       "BORROWER_NAMES                     20371\n",
       "BORROWER_GENDERS                   20416\n",
       "BORROWER_PICTURED                  20416\n",
       "REPAYMENT_INTERVAL                 20872\n",
       "DISTRIBUTION_MODEL                 20872\n",
       "dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Total number of loan\n",
    "loans.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "99e57042",
   "metadata": {
    "id": "99e57042"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "20342"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Total number of loas_lenders\n",
    "loans_lenders['LOAN_ID'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "127d333b",
   "metadata": {
    "id": "127d333b"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "821.0066117286317"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# average loan size\n",
    "loans['LOAN_AMOUNT'].mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "79474dab",
   "metadata": {
    "id": "79474dab"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.10575744443754656"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# average interest rate\n",
    "loans['CURRENCY_EXCHANGE_COVERAGE_RATE'].mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c0708722",
   "metadata": {
    "id": "c0708722"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "13.180960137983902"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# average term length\n",
    "loans['LENDER_TERM'].mean() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "f52f24c0",
   "metadata": {
    "id": "f52f24c0"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "500.0"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# median loan size\n",
    "loans['LOAN_AMOUNT'].median()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "18c71667",
   "metadata": {
    "id": "18c71667"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.1"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# median interest rate\n",
    "loans['CURRENCY_EXCHANGE_COVERAGE_RATE'].median()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "e50a2e47",
   "metadata": {
    "id": "e50a2e47"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "13.0"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# median term length\n",
    "loans['LENDER_TERM'].median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "575f0e2b",
   "metadata": {
    "id": "575f0e2b"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "25"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# minimum loan size\n",
    "loans['LOAN_AMOUNT'].min()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "f14c2f75",
   "metadata": {
    "id": "f14c2f75"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# minimum interest rate\n",
    "loans['CURRENCY_EXCHANGE_COVERAGE_RATE'].min()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "4f5c527a",
   "metadata": {
    "id": "4f5c527a"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# minimum term length\n",
    "loans['LENDER_TERM'].min()\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "084fe6f6",
   "metadata": {
    "id": "084fe6f6"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "75000"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# maximum loan size\n",
    "loans['LOAN_AMOUNT'].max()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "b9c10bef",
   "metadata": {
    "id": "b9c10bef"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.2"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# maximum interest rate\n",
    "loans['CURRENCY_EXCHANGE_COVERAGE_RATE'].max()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "b87ce557",
   "metadata": {
    "id": "b87ce557"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "146"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# maximum term length\n",
    "loans['LENDER_TERM'].max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "a27155ad",
   "metadata": {
    "id": "a27155ad"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "74975"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# range of loan size\n",
    "loans['LOAN_AMOUNT'].max() - loans['LOAN_AMOUNT'].min()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "ab04a5f4",
   "metadata": {
    "id": "ab04a5f4"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.2"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# range of interest rate\n",
    "loans['CURRENCY_EXCHANGE_COVERAGE_RATE'].max() - loans['CURRENCY_EXCHANGE_COVERAGE_RATE'].min()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "19f2f623",
   "metadata": {
    "id": "19f2f623"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "144"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# range of term length\n",
    "loans['LENDER_TERM'].max() - loans['LENDER_TERM'].min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "4772db85",
   "metadata": {
    "id": "4772db85"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LOAN_ID</th>\n",
       "      <th>FUNDED_AMOUNT</th>\n",
       "      <th>LOAN_AMOUNT</th>\n",
       "      <th>IMAGE_ID</th>\n",
       "      <th>VIDEO_ID</th>\n",
       "      <th>CURRENCY_EXCHANGE_COVERAGE_RATE</th>\n",
       "      <th>PARTNER_ID</th>\n",
       "      <th>LENDER_TERM</th>\n",
       "      <th>NUM_LENDERS_TOTAL</th>\n",
       "      <th>NUM_JOURNAL_ENTRIES</th>\n",
       "      <th>NUM_BULK_ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.930000e+02</td>\n",
       "      <td>193.000000</td>\n",
       "      <td>193.000000</td>\n",
       "      <td>1.910000e+02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>143.000000</td>\n",
       "      <td>190.000000</td>\n",
       "      <td>193.000000</td>\n",
       "      <td>193.000000</td>\n",
       "      <td>193.000000</td>\n",
       "      <td>193.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.072756e+06</td>\n",
       "      <td>762.176166</td>\n",
       "      <td>786.010363</td>\n",
       "      <td>2.111106e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.103497</td>\n",
       "      <td>185.278947</td>\n",
       "      <td>13.129534</td>\n",
       "      <td>23.243523</td>\n",
       "      <td>1.466321</td>\n",
       "      <td>1.119171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>6.336187e+05</td>\n",
       "      <td>908.370754</td>\n",
       "      <td>912.367222</td>\n",
       "      <td>1.110381e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.038296</td>\n",
       "      <td>124.301269</td>\n",
       "      <td>5.283505</td>\n",
       "      <td>26.484818</td>\n",
       "      <td>0.847887</td>\n",
       "      <td>0.409898</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>8.425000e+03</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>2.703900e+04</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>5.231460e+05</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>275.000000</td>\n",
       "      <td>1.240416e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>118.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.102220e+06</td>\n",
       "      <td>450.000000</td>\n",
       "      <td>500.000000</td>\n",
       "      <td>2.232044e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>145.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.615166e+06</td>\n",
       "      <td>900.000000</td>\n",
       "      <td>925.000000</td>\n",
       "      <td>2.968339e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>204.750000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.126160e+06</td>\n",
       "      <td>6150.000000</td>\n",
       "      <td>6150.000000</td>\n",
       "      <td>4.240782e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>596.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>160.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            LOAN_ID  FUNDED_AMOUNT  LOAN_AMOUNT      IMAGE_ID  VIDEO_ID  \\\n",
       "count  1.930000e+02     193.000000   193.000000  1.910000e+02       0.0   \n",
       "mean   1.072756e+06     762.176166   786.010363  2.111106e+06       NaN   \n",
       "std    6.336187e+05     908.370754   912.367222  1.110381e+06       NaN   \n",
       "min    8.425000e+03      50.000000    50.000000  2.703900e+04       NaN   \n",
       "25%    5.231460e+05     250.000000   275.000000  1.240416e+06       NaN   \n",
       "50%    1.102220e+06     450.000000   500.000000  2.232044e+06       NaN   \n",
       "75%    1.615166e+06     900.000000   925.000000  2.968339e+06       NaN   \n",
       "max    2.126160e+06    6150.000000  6150.000000  4.240782e+06       NaN   \n",
       "\n",
       "       CURRENCY_EXCHANGE_COVERAGE_RATE  PARTNER_ID  LENDER_TERM  \\\n",
       "count                       143.000000  190.000000   193.000000   \n",
       "mean                          0.103497  185.278947    13.129534   \n",
       "std                           0.038296  124.301269     5.283505   \n",
       "min                           0.000000    9.000000     3.000000   \n",
       "25%                           0.100000  118.000000     9.000000   \n",
       "50%                           0.100000  145.000000    13.000000   \n",
       "75%                           0.100000  204.750000    14.000000   \n",
       "max                           0.200000  596.000000    50.000000   \n",
       "\n",
       "       NUM_LENDERS_TOTAL  NUM_JOURNAL_ENTRIES  NUM_BULK_ENTRIES  \n",
       "count         193.000000           193.000000        193.000000  \n",
       "mean           23.243523             1.466321          1.119171  \n",
       "std            26.484818             0.847887          0.409898  \n",
       "min             1.000000             1.000000          1.000000  \n",
       "25%             8.000000             1.000000          1.000000  \n",
       "50%            15.000000             1.000000          1.000000  \n",
       "75%            27.000000             2.000000          1.000000  \n",
       "max           160.000000             6.000000          4.000000  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Summary Statistics for Numerical data:\n",
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "d15bd8bb",
   "metadata": {
    "id": "d15bd8bb"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# For loan_amount \n",
    "data['LOAN_AMOUNT'].plot(kind='box')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "bca20c54",
   "metadata": {},
   "outputs": [],
   "source": [
    "# STEP 1 - explode lenders out of of column entry into multiple rows\n",
    "def explode(df, columns):\n",
    "    idx = np.repeat(df.index, df[columns[0]].str.len())\n",
    "    a = df.T.reindex_axis(columns).values\n",
    "    concat = np.concatenate([np.concatenate(a[i]) for i in range(a.shape[0])])\n",
    "    p = pd.DataFrame(concat.reshape(a.shape[0], -1).T, idx, columns)\n",
    "    return pd.concat([df.drop(columns, axis=1), p], axis=1).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "87d3b6cd",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\admin\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,8))\n",
    "plotSeries = lenders['COUNTRY_CODE'].value_counts()\n",
    "ax = sns.barplot(plotSeries.head(30).values, plotSeries.head(30).index, color='c')\n",
    "ax.set_title('Top 30 Lender Locations', fontsize=15)\n",
    "ax.set(ylabel='Country (ISO-2 Abbrev)', xlabel='Lender Count')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d212526e",
   "metadata": {
    "id": "6gUE7RmTwKmv"
   },
   "source": [
    "The US dwarfs everyone else. Kiva is, indeed, a US non-profit. It has nearly 600,000 registered users, with Canada encroaching on 70,000 as the next most popular place for contributors to live.\n",
    "\n",
    "What's this breakdown look like without the US?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "27c5d0a7",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\admin\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plt.figure(figsize=(15,8))\n",
    "plotSeries = lenders[lenders['COUNTRY_CODE'] != 'US']['COUNTRY_CODE'].value_counts()\n",
    "ax = sns.barplot(plotSeries.head(29).values, plotSeries.head(29).index, color='b')\n",
    "ax.set_title('Top 30 Lender Locations, Minus the US', fontsize=15)\n",
    "ax.set(ylabel='Country (ISO-2 Abbrev)', xlabel='Lender Count')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0acb46e3",
   "metadata": {},
   "source": [
    "Top Loans Per User Per Country¶"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "b294bf50",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>COUNTRY_CODE</th>\n",
       "      <th>counts_reg</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AE</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AF</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AO</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AR</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  COUNTRY_CODE  counts_reg\n",
       "0           AE           8\n",
       "1           AF           2\n",
       "2           AO           1\n",
       "3           AQ           1\n",
       "4           AR           3"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_lender_sum = lenders.groupby(['COUNTRY_CODE']).size().reset_index(name='counts_reg')\n",
    "df_lender_sum.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "de06c640",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>COUNTRY_CODE</th>\n",
       "      <th>counts_reg</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>US</td>\n",
       "      <td>4363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>CA</td>\n",
       "      <td>596</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>GB</td>\n",
       "      <td>295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>AU</td>\n",
       "      <td>291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>DE</td>\n",
       "      <td>127</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>NL</td>\n",
       "      <td>109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>SE</td>\n",
       "      <td>86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>FR</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>NO</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>ES</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   COUNTRY_CODE  counts_reg\n",
       "85           US        4363\n",
       "16           CA         596\n",
       "32           GB         295\n",
       "7            AU         291\n",
       "23           DE         127\n",
       "58           NL         109\n",
       "76           SE          86\n",
       "31           FR          59\n",
       "59           NO          59\n",
       "28           ES          40"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_display = df_lender_sum.sort_values('counts_reg', ascending=False).head(30)\n",
    "\n",
    "df_display.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "fe2e082d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "df_display = df_lender_sum[df_lender_sum['counts_reg'] >= 50].sort_values('counts_reg', ascending=False).head(30)\n",
    "\n",
    "fig, ax = plt.subplots(1, 1, figsize=(15, 9), sharex=True)\n",
    "\n",
    "sns.barplot(x='counts_reg', y='counts_reg', data=df_display, color='orange')\n",
    "\n",
    "ax.set_title('Top 30 Locations by Lender Contribution Count Per Registered User, >= 50 Users', fontsize=15)\n",
    "ax.set(ylabel='Country', xlabel='Number of Loan Contributions Per User')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "7175b3b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>COUNTRY_CODE</th>\n",
       "      <th>OCCUPATION</th>\n",
       "      <th>LOAN_BECAUSE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [COUNTRY_CODE, OCCUPATION, LOAN_BECAUSE]\n",
       "Index: []"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lenders[lenders['COUNTRY_CODE'] == 'OM'][['COUNTRY_CODE', 'OCCUPATION', 'LOAN_BECAUSE']].dropna(axis=0, how='any')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bc1a1969",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "b2629a23",
   "metadata": {},
   "source": [
    "Very interesting. from a general browsing standpoint, we can see:\n",
    "\n",
    "We've got some solid international friends at Kiva!\n",
    "It seems Christians and retirees are represented well (also cats and dogs)\n",
    "Some did not count in our current ratings as they do not have a country code.\n",
    "These top 20 lenders have a combined 650,322 loan contributions alone - nearly the volume or Kiva's originally provided dataset. At a minimum contribution, this group is responsible for lending out at least $16,258,050. Summing up loan_purchase_num, I got 25,071,662; which means these top 20 lenders did nearly 2.6% of all contributions themselves.\n",
    "Good Dogg seems like he's probably averaging 20+ loans a day - at this point he surely has so many repayments coming back that quite a bit of that is simply coming in and going back out the door. His daily lending habits seem vastly superior to my daily (not so much) gym habits. A very good dogg indeed.\n",
    "These people are even exceptions to the rule at the top, as can be seen below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "bdc50263",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "99.0th percentile loan_purchase_num is: 281.58000000000175\n",
      "99.1th percentile loan_purchase_num is: 305.47400000000016\n",
      "99.2th percentile loan_purchase_num is: 321.1759999999995\n",
      "99.3th percentile loan_purchase_num is: 358.61599999999453\n",
      "99.4th percentile loan_purchase_num is: 432.63200000000506\n",
      "99.5th percentile loan_purchase_num is: 478.9300000000003\n",
      "99.6th percentile loan_purchase_num is: 532.5279999999984\n",
      "99.7th percentile loan_purchase_num is: 642.2639999999956\n",
      "99.8th percentile loan_purchase_num is: 803.8960000000152\n",
      "99.9th percentile loan_purchase_num is: 1277.9340000002667\n"
     ]
    }
   ],
   "source": [
    "for x in range(0,10):\n",
    "    print('99.' + str(x) + 'th percentile loan_purchase_num is: ' + str(lenders['LOAN_PURCHASE_NUM'].quantile(0.99 + x/1000)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "c0ff079f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count       23\n",
       "sum      54626\n",
       "Name: LOAN_PURCHASE_NUM, dtype: int64"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lenders[lenders['LOAN_PURCHASE_NUM'] >= 1000]['LOAN_PURCHASE_NUM'].agg(['count', 'sum'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf89813c",
   "metadata": {},
   "source": [
    "We have 1,810 of the 1000+ loan contributors, making up about 20.5% of the number of contributions. That's a really incredible amount. At a minimum of 25 USD each, that means these 1,810 people have lent at least $128.36 million, which is incredible.\n",
    "\n",
    "Let's look at the lower scale."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "3e41b21a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10th percentile loan_purchase_num is: 1.0\n",
      "20th percentile loan_purchase_num is: 1.0\n",
      "30th percentile loan_purchase_num is: 1.0\n",
      "40th percentile loan_purchase_num is: 2.0\n",
      "50th percentile loan_purchase_num is: 3.0\n",
      "60th percentile loan_purchase_num is: 5.0\n",
      "70th percentile loan_purchase_num is: 8.0\n",
      "80th percentile loan_purchase_num is: 14.0\n",
      "90th percentile loan_purchase_num is: 34.0\n",
      "91th percentile loan_purchase_num is: 38.0\n",
      "92th percentile loan_purchase_num is: 44.0\n",
      "93th percentile loan_purchase_num is: 51.0\n",
      "94th percentile loan_purchase_num is: 59.0\n",
      "95th percentile loan_purchase_num is: 70.0\n",
      "96th percentile loan_purchase_num is: 86.0\n",
      "97th percentile loan_purchase_num is: 111.0\n",
      "98th percentile loan_purchase_num is: 158.0\n",
      "99th percentile loan_purchase_num is: 281.58000000000175\n"
     ]
    }
   ],
   "source": [
    "for x in range(1,10):\n",
    "    print(str(x * 10) + 'th percentile loan_purchase_num is: ' + str(lenders['LOAN_PURCHASE_NUM'].quantile(x/10)))\n",
    "for x in range(1,10):\n",
    "    print('9' + str(x) + 'th percentile loan_purchase_num is: ' + str(lenders['LOAN_PURCHASE_NUM'].quantile(.9 + x/100)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "55ced168",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\admin\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2557: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 1, figsize=(12,6))\n",
    "sns.distplot(lenders[lenders['LOAN_PURCHASE_NUM'] <= 50]['LOAN_PURCHASE_NUM'].fillna(0), bins=30)\n",
    "\n",
    "ax.set_title('Distribution - Number of Loan Contributions by User, <= 50 Loans', fontsize=15)\n",
    "ax.set(xlabel='Loan Contributions by User')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "f6d9c7e1",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\admin\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2557: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n",
      "C:\\Users\\admin\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2595: RuntimeWarning: Mean of empty slice.\n",
      "  line, = ax.plot(a.mean(), 0)\n",
      "C:\\Users\\admin\\anaconda3\\lib\\site-packages\\numpy\\core\\_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  ret = ret.dtype.type(ret / rcount)\n",
      "C:\\Users\\admin\\anaconda3\\lib\\site-packages\\numpy\\lib\\histograms.py:905: RuntimeWarning: invalid value encountered in true_divide\n",
      "  return n/db/n.sum(), bin_edges\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 1, figsize=(12,6))\n",
    "sns.distplot(lenders[(lenders['LOAN_PURCHASE_NUM'] <= 50) & (lenders['LOAN_PURCHASE_NUM'] == 'US')]['LOAN_PURCHASE_NUM'].fillna(0), bins=30)\n",
    "\n",
    "ax.set_title('Distribution - Number of Loan Contributions by User, <= 50 Loans, USA Only', fontsize=15)\n",
    "ax.set(xlabel='Loan Contributions by User')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5a27b65",
   "metadata": {},
   "source": [
    "The big question for Kiva is, how do we retain sticky users, who will keep coming back and re-lending out on the site? Not everyone is going to make 1000 loans, but how many 1s or 2s can we turn into 10s or 20s?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "857777e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PERMANENT_NAME</th>\n",
       "      <th>DISPLAY_NAME</th>\n",
       "      <th>MAIN_PIC_ID</th>\n",
       "      <th>CITY</th>\n",
       "      <th>STATE</th>\n",
       "      <th>COUNTRY_CODE</th>\n",
       "      <th>MEMBER_SINCE</th>\n",
       "      <th>PERSONAL_URL</th>\n",
       "      <th>OCCUPATION</th>\n",
       "      <th>LOAN_BECAUSE</th>\n",
       "      <th>OTHER_INFO</th>\n",
       "      <th>LOAN_PURCHASE_NUM</th>\n",
       "      <th>INVITED_BY</th>\n",
       "      <th>NUM_INVITED</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>teresa5718</td>\n",
       "      <td>Teresa</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1393520019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>pamelamaria7176</td>\n",
       "      <td>Pamela Maria</td>\n",
       "      <td>2173780.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1462466084</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>mireya2557</td>\n",
       "      <td>Mireya</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1445444352</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>jonatan8873</td>\n",
       "      <td>Jonatan</td>\n",
       "      <td>1356784.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1369132003</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>MichaelHaenni</td>\n",
       "      <td>Michael Haenni</td>\n",
       "      <td>2401474.0</td>\n",
       "      <td>Zürich</td>\n",
       "      <td>ZH</td>\n",
       "      <td>CH</td>\n",
       "      <td>1243806271</td>\n",
       "      <td>www.digiinfo.com</td>\n",
       "      <td>CEO</td>\n",
       "      <td>It's a good thing &amp; fun at the same time.</td>\n",
       "      <td>Develop and sell software for the graphic indu...</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15610</th>\n",
       "      <td>bernadett8136</td>\n",
       "      <td>Bernadett</td>\n",
       "      <td>969074.0</td>\n",
       "      <td>Calgary</td>\n",
       "      <td>Alberta</td>\n",
       "      <td>CA</td>\n",
       "      <td>1254103689</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20</td>\n",
       "      <td>Todd Skene</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15611</th>\n",
       "      <td>lindsey15882007</td>\n",
       "      <td>Lindsey</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1487697303</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15612</th>\n",
       "      <td>dorianne7021</td>\n",
       "      <td>Dorianne</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1538457803</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15613</th>\n",
       "      <td>laurie99399806</td>\n",
       "      <td>Laurie</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1446796372</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>Chris</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15614</th>\n",
       "      <td>sara42</td>\n",
       "      <td>Sara</td>\n",
       "      <td>701205.0</td>\n",
       "      <td>Great Falls</td>\n",
       "      <td>Virginia</td>\n",
       "      <td>US</td>\n",
       "      <td>1296054872</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Its a great small way to help people in need!</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15615 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        PERMANENT_NAME    DISPLAY_NAME  MAIN_PIC_ID         CITY     STATE  \\\n",
       "0           teresa5718          Teresa          NaN          NaN       NaN   \n",
       "1      pamelamaria7176    Pamela Maria    2173780.0          NaN       NaN   \n",
       "2           mireya2557          Mireya          NaN          NaN       NaN   \n",
       "3          jonatan8873         Jonatan    1356784.0          NaN       NaN   \n",
       "4        MichaelHaenni  Michael Haenni    2401474.0       Zürich        ZH   \n",
       "...                ...             ...          ...          ...       ...   \n",
       "15610    bernadett8136       Bernadett     969074.0      Calgary   Alberta   \n",
       "15611  lindsey15882007         Lindsey          NaN          NaN       NaN   \n",
       "15612     dorianne7021        Dorianne          NaN          NaN       NaN   \n",
       "15613   laurie99399806          Laurie          NaN          NaN       NaN   \n",
       "15614           sara42            Sara     701205.0  Great Falls  Virginia   \n",
       "\n",
       "      COUNTRY_CODE  MEMBER_SINCE      PERSONAL_URL OCCUPATION  \\\n",
       "0              NaN    1393520019               NaN        NaN   \n",
       "1              NaN    1462466084               NaN        NaN   \n",
       "2              NaN    1445444352               NaN        NaN   \n",
       "3              NaN    1369132003               NaN        NaN   \n",
       "4               CH    1243806271  www.digiinfo.com        CEO   \n",
       "...            ...           ...               ...        ...   \n",
       "15610           CA    1254103689               NaN        NaN   \n",
       "15611          NaN    1487697303               NaN        NaN   \n",
       "15612          NaN    1538457803               NaN        NaN   \n",
       "15613          NaN    1446796372               NaN        NaN   \n",
       "15614           US    1296054872               NaN        NaN   \n",
       "\n",
       "                                        LOAN_BECAUSE  \\\n",
       "0                                                NaN   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4          It's a good thing & fun at the same time.   \n",
       "...                                              ...   \n",
       "15610                                            NaN   \n",
       "15611                                            NaN   \n",
       "15612                                            NaN   \n",
       "15613                                            NaN   \n",
       "15614  Its a great small way to help people in need!   \n",
       "\n",
       "                                              OTHER_INFO  LOAN_PURCHASE_NUM  \\\n",
       "0                                                    NaN                 10   \n",
       "1                                                    NaN                  1   \n",
       "2                                                    NaN                  1   \n",
       "3                                                    NaN                 28   \n",
       "4      Develop and sell software for the graphic indu...                 29   \n",
       "...                                                  ...                ...   \n",
       "15610                                                NaN                 20   \n",
       "15611                                                NaN                  1   \n",
       "15612                                                NaN                  1   \n",
       "15613                                                NaN                  1   \n",
       "15614                                                NaN                 19   \n",
       "\n",
       "       INVITED_BY  NUM_INVITED  \n",
       "0             NaN            0  \n",
       "1             NaN            0  \n",
       "2             NaN            0  \n",
       "3             NaN            0  \n",
       "4             NaN            0  \n",
       "...           ...          ...  \n",
       "15610  Todd Skene            2  \n",
       "15611         NaN            0  \n",
       "15612         NaN            0  \n",
       "15613       Chris            0  \n",
       "15614         NaN            0  \n",
       "\n",
       "[15615 rows x 14 columns]"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lenders"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "e0d676bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>COUNTRY_CODE</th>\n",
       "      <th>counts_reg</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AE</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AF</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AO</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AR</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>UA</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>UM</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>US</td>\n",
       "      <td>4363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>UY</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>ZA</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>88 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   COUNTRY_CODE  counts_reg\n",
       "0            AE           8\n",
       "1            AF           2\n",
       "2            AO           1\n",
       "3            AQ           1\n",
       "4            AR           3\n",
       "..          ...         ...\n",
       "83           UA           2\n",
       "84           UM           1\n",
       "85           US        4363\n",
       "86           UY           1\n",
       "87           ZA           1\n",
       "\n",
       "[88 rows x 2 columns]"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#df_whale = df_lenders.sort_values('loan_purchase_num', ascending=False).head(20)[['permanent_name']]\n",
    "#remove outliers\n",
    "outlier = 707\n",
    "df_whale = lenders[lenders['LOAN_PURCHASE_NUM'] >= outlier][['PERMANENT_NAME']]\n",
    "df_whale['whale'] = 'Y'\n",
    "df_lenders = lenders.merge(df_whale, how='left', on='PERMANENT_NAME')\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# country divided by registered users...  slightly unfairly, counting whales as 0s now...\n",
    "df_lender_sum = lenders.groupby(['COUNTRY_CODE']).size().reset_index(name='counts_reg')\n",
    "df_lender_sum"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f940acc",
   "metadata": {},
   "source": [
    "Lender Occupations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "7c80dce9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "lenders['OCCUPATION'] = lenders['OCCUPATION'].str.title()\n",
    "df_display = lenders['OCCUPATION'].value_counts().head(30).to_frame()\n",
    "\n",
    "fig, ax = plt.subplots(1, 1, figsize=(15, 9), sharex=True)\n",
    "\n",
    "sns.barplot(x='OCCUPATION', y=df_display.index, data=df_display, color='aqua')\n",
    "\n",
    "ax.set_title('Top 30 Occupations - Registered Users', fontsize=15)\n",
    "ax.set(ylabel='Occupation', xlabel='Number of Registered Lenders')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "664d4c27",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_display = df_lenders.groupby('OCCUPATION')['LOAN_PURCHASE_NUM'].sum().to_frame().sort_values('LOAN_PURCHASE_NUM', ascending=False).head(30)\n",
    "\n",
    "fig, ax = plt.subplots(1, 1, figsize=(15, 9), sharex=True)\n",
    "\n",
    "sns.barplot(x='LOAN_PURCHASE_NUM', y=df_display.index, data=df_display, color='darkcyan')\n",
    "\n",
    "ax.set_title('Top 30 Occupations - Most Loan Contributions', fontsize=15)\n",
    "ax.set(ylabel='Occupation', xlabel='Number of Loan Contributions')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "529f7f63",
   "metadata": {},
   "source": [
    "It's amusing that the user with the most contributions himself shows up here! He is a lawyer. Unsurprising is that retirees come out on top. Surprising is teachers and students show up so high here - Kiva has probably had a good run as a teaching tool. What about loans per user for an occupation?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4zMup8DovBBG",
   "metadata": {
    "id": "4zMup8DovBBG"
   },
   "source": [
    "# Conclusion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "829d915d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "fd25c5ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 1, figsize=(15, 9), sharex=True)\n",
    "\n",
    "sns.barplot(x='counts_reg', y='counts_reg', data=df_display, color='r')\n",
    "\n",
    "ax.set_title('Top 30 Locations by Lender Contribution Count Per Registered User', fontsize=15)\n",
    "ax.set(ylabel='Country', xlabel='Number of Loan Contributions')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bVNmf5S1vEBd",
   "metadata": {
    "id": "bVNmf5S1vEBd"
   },
   "source": [
    "\n",
    "\n",
    "There are some interesting trends in the data that could be further explored, such as the relationship between the amount of the loan and the status of the loan, and the relationship between the country of the borrower and the status of the loan. \n",
    "\n",
    "Further analysis could be done to explore these trends in more depth and to see if any other interesting relationships can be found."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cbd75627",
   "metadata": {},
   "source": [
    "# Recomendation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "140e62cd",
   "metadata": {
    "id": "9abc1576"
   },
   "source": [
    "What is going on with the plateau reached by Kiva registered user growth hit in 2014? It would be interesting to see what happened there, if Kiva has any indication of changes.\n",
    "A lot of Kiva users register and make 0-1 loans. In fact, simply making 2 loans already puts a user at the 40th percentile of lenders. Kiva needs to figure out a good way to convert a registered user into a sticky user. This might be increasing the frequency of contacts or perhaps the quality of them, to encourage users with credit to re-lend and get interested in adding additional risk-tolerant capital.\n",
    "Kiva should market to those users it already knows tend to be stickier and like its platform and mission - those in the top occupations charts we saw above. Additionally retirees and Christians are among its more loyal users.\n",
    "Kiva's funding gap appears to grow the largest in the US summer months - it would be nice to fill it with some additional Southern Hemisphere lenders, or those around the Equator. Australia already has more than 10,000 registered Kia users and a pretty strong economy; spreading the message and acquiring more users there might be perfect for reducing the gap.\n",
    "It's a weird feature of a US \"travel hacking\" hobby, but some people meet credit card minimum spends for bonus by lending out to people on Kiva. My own set of loans is in part due to that. I don't think the effect can be denied, as by number of loans, I found at least the accounts ranked 45, 126, and 168 were all related to this, related to a travel hacking blog which I have read. These 3 accounts alone have 24,546 loans to their name. Kiva could market to travelers or more targeted, this niche of credit card and points travel hackers. The 4th largest contributing Kiva group is a travel and miles group.\n",
    "Kiva should do something more with public leaderboards and gamifying the lending process. Right now Kiva has lending groups, which are used in varying degrees to get like minded people to lend together. These are based on religions, political views, companies, hobbies (like the flyers mentioned above), etc. When a loan is made, it can be credited towards a group. So there is a fun informal gamification already going on, although I think Kiva could do more in providing public lists and leaderboards to gamify various demographics. This could be most loans to country x; or for sector y. Most loans to women, or groups; most loans from a state; etc etc. Perhaps state isn't just individuals within a state, but a leaderboard for total state contributions or contributions per capita. I think some friendly gamification will help encourage some stickiness in lenders, as well as result in some of those atop the leaderboards lending more, as they are able to see what it takes to climb up just a bit more..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "71d61ebd",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
